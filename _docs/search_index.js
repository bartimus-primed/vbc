var searchModuleIndex = ["main","chain","entities",];
var searchIndex = ["main","Block","to_string","Hash_Block","Block_Chain","commit_block","init_genesis","check_block_proof","validate_block","create_new_block","create_new_blockchain","create_hash_block","Transaction","Transaction_Chain","flush_transaction_chain","to_string","new_transaction","new_transaction_chain","User","new_user",];
var searchModuleData = [[" ","main.html"],[" ","chain.html"],[" ","entities.html"],];
var searchData = [["main","","main.html#main","fn "],["chain"," Block is the basic structure.  It contains a list of transactions, the proof us","chain.html#Block","struct "],["chain"," to_string is a helper function, probably not needed, but it exists. ","chain.html#Block.to_string","fn (Block)"],["chain"," Hash_Block simply keeps a block and it's hash together, making it easier to loo","chain.html#Hash_Block","struct "],["chain"," Block_Chain holds an array of Hash_Block structures which hold Block structures","chain.html#Block_Chain","struct "],["chain"," commit_block takes in the mutable transaction chain and the proof.  It will che","chain.html#Block_Chain.commit_block","fn (Block_Chain)"],["chain"," init_genesis initializes the blockchain, using a `transaction` value and `previ","chain.html#Block_Chain.init_genesis","fn (Block_Chain)"],["chain"," check_block_proof takes in a given Transaction_Chain and a proof string value  ","chain.html#Block_Chain.check_block_proof","fn (Block_Chain)"],["chain"," validate_block takes in a hash from a block and checks for it's presence in the","chain.html#Block_Chain.validate_block","fn (Block_Chain)"],["chain"," create_new_block is used internally to create a new block, it holds transaction","chain.html#Block_Chain.create_new_block","fn (Block_Chain)"],["chain"," create_new_blockchain takes a single argument which is the satisifaction patter","chain.html#create_new_blockchain","fn "],["chain"," create_hash_block used internally to create a hashblock with proof ","chain.html#create_hash_block","fn "],["chain","","chain.html#Transaction","struct "],["chain","","chain.html#Transaction_Chain","struct "],["chain","","chain.html#Transaction_Chain.flush_transaction_chain","fn (Transaction_Chain)"],["chain","","chain.html#Transaction_Chain.to_string","fn (Transaction_Chain)"],["chain","","chain.html#new_transaction","fn "],["chain","","chain.html#new_transaction_chain","fn "],["entities","","entities.html#User","struct "],["entities","","entities.html#new_user","fn "],];
